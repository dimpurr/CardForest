scalar Date
scalar JSON

type User {
  _key: ID!
  _id: ID!
  username: String!
  createdAt: Date!
  updatedAt: Date!
}

type FieldDefinition {
  name: String!
  type: String!
  required: Boolean
  default: JSON
  config: JSON
}

type FieldGroup {
  _inherit_from: String!
  fields: [FieldDefinition!]!
}

type Template {
  _key: ID!
  _id: ID!
  name: String!
  inherits_from: [String!]!
  fields: [FieldGroup!]!
  system: Boolean!
  createdAt: String!
  updatedAt: String
  createdBy: String
}

type FlattenedTemplate {
  _key: ID!
  name: String!
  fields: JSON!
  system: Boolean!
  createdAt: String!
  updatedAt: String
  createdBy: String
}

type Card {
  _key: ID!
  _id: ID!
  template: Template!
  title: String!
  content: String
  body: String
  meta: JSON!
  createdAt: Date!
  updatedAt: Date!
  createdBy: User!
}

type CardWithRelations {
  card: Card!
  children: [Card!]!
}

input FieldDefinitionInput {
  name: String!
  type: String!
  required: Boolean
  default: JSON
  config: JSON
}

input FieldGroupInput {
  _inherit_from: String!
  fields: [FieldDefinitionInput!]!
}

input CreateTemplateInput {
  name: String!
  inherits_from: [String!]
  fields: [FieldGroupInput!]!
}

input UpdateTemplateInput {
  name: String
  inherits_from: [String!]
  fields: [FieldGroupInput!]
}

type Query {
  # User related
  me: User
  user(id: ID!): User
  users: [User!]!

  # Card related
  card(id: ID!): Card
  cards: [Card!]!
  myCards: [Card!]!
  cardsWithRelations: [CardWithRelations!]!

  # Template related
  templates: [FlattenedTemplate!]!
  template(id: ID!): FlattenedTemplate
  templateWithInheritance(id: ID!): Template
  userTemplates: [Template!]!
}

type Mutation {
  # User related
  login(username: String!, password: String!): String!
  register(username: String!, password: String!): User!

  # Template related
  createTemplate(input: CreateTemplateInput!): Template!
  updateTemplate(id: ID!, input: UpdateTemplateInput!): Template!
  deleteTemplate(id: ID!): Boolean!

  # Card related
  createCard(
    templateId: ID!
    title: String!
    content: String
    body: String
    meta: JSON
  ): Card!
  updateCard(
    id: ID!
    title: String
    content: String
    body: String
    meta: JSON
  ): Card!
  deleteCard(id: ID!): Boolean!
  createRelation(fromCardId: ID!, toCardId: ID!): Boolean!
}
